{
  "version": 3,
  "file": "ngrx-form.umd.min.js",
  "sources": [
    "ng://ngrx-form/out/actions.ts",
    "ng://ngrx-form/out/reducer.ts",
    "ng://ngrx-form/out/directive.ts",
    "ng://ngrx-form/out/module.ts"
  ],
  "sourcesContent": [
    "import { Action } from '@ngrx/store';\r\n\r\nexport enum FormActions {\r\n  UpdateStatus = '[Form] Update Status',\r\n  UpdateValue = '[Form] Update Value',\r\n  UpdateDirty = '[Form] Update Dirty',\r\n  SetDirty = '[Form] Set Dirty',\r\n  SetPrestine = '[Form] Set Prestine',\r\n  UpdateErrors = '[Form] Update Errors',\r\n  SetDisabled = '[Form] Disable Form',\r\n  SetEnabled = '[Form] Enable Form',\r\n  UpdateForm = '[Form] Update Form'\r\n}\r\n\r\nexport class UpdateFormStatus implements Action {\r\n  readonly type = FormActions.UpdateStatus;\r\n  constructor(public payload: { status: string | null; path: string }) {}\r\n}\r\n\r\nexport class UpdateFormValue implements Action {\r\n  readonly type = FormActions.UpdateValue;\r\n  constructor(public payload: { value: any; path: string }) {}\r\n}\r\n\r\nexport class UpdateForm implements Action {\r\n  readonly type = FormActions.UpdateForm;\r\n  constructor(\r\n    public payload: {\r\n      value: any;\r\n      errors: { [k: string]: string } | null;\r\n      dirty: boolean | null;\r\n      status: string | null;\r\n      path: string;\r\n    }\r\n  ) {}\r\n}\r\n\r\nexport class UpdateFormDirty implements Action {\r\n  readonly type = FormActions.UpdateDirty;\r\n  constructor(public payload: { dirty: boolean | null; path: string }) {}\r\n}\r\n\r\nexport class SetFormDirty implements Action {\r\n  readonly type = FormActions.SetDirty;\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class SetFormPristine implements Action {\r\n  readonly type = FormActions.SetPrestine;\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class UpdateFormErrors implements Action {\r\n  readonly type = FormActions.UpdateErrors;\r\n  constructor(public payload: { errors: { [k: string]: string } | null; path: string }) {}\r\n}\r\n\r\nexport class SetFormDisabled implements Action {\r\n  readonly type = FormActions.SetDisabled;\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class SetFormEnabled implements Action {\r\n  readonly type = FormActions.SetEnabled;\r\n  constructor(public payload: string) {}\r\n}\r\n",
    "import { FormActions } from './actions';\r\n\r\nexport interface FormState<T> {\r\n  model: T;\r\n  modelId?: string;\r\n  errors?: { [k: string]: string };\r\n  dirty?: boolean;\r\n  status?: string;\r\n}\r\n\r\nconst setValue = (obj, prop, val) => {\r\n  obj = { ...obj };\r\n  const split = prop.split('.');\r\n  const last = split[split.length - 1];\r\n  split.reduce((acc, part) => {\r\n    if (part === last) {\r\n      acc[part] = val;\r\n    } else {\r\n      acc[part] = { ...acc[part] };\r\n    }\r\n    return acc && acc[part];\r\n  }, obj);\r\n  return obj;\r\n};\r\n\r\nexport function form(reducer: Function) {\r\n  return function(state: any, action: any) {\r\n    let nextState = reducer(state, action);\r\n\r\n    if (action.type === FormActions.UpdateValue || action.type === FormActions.UpdateForm) {\r\n      nextState = setValue(nextState, `${action.payload.path}.model`, { ...action.payload.value });\r\n    }\r\n\r\n    if (action.type === FormActions.UpdateStatus || action.type === FormActions.UpdateForm) {\r\n      nextState = setValue(nextState, `${action.payload.path}.status`, action.payload.status);\r\n    }\r\n\r\n    if (action.type === FormActions.UpdateErrors || action.type === FormActions.UpdateForm) {\r\n      nextState = setValue(nextState, `${action.payload.path}.errors`, { ...action.payload.errors });\r\n    }\r\n\r\n    if (action.type === FormActions.UpdateDirty || action.type === FormActions.UpdateForm) {\r\n      nextState = setValue(nextState, `${action.payload.path}.dirty`, action.payload.dirty);\r\n    }\r\n\r\n    if (action.type === FormActions.SetDirty) {\r\n      nextState = setValue(nextState, `${action.payload}.dirty`, true);\r\n    }\r\n\r\n    if (action.type === FormActions.SetPrestine) {\r\n      nextState = setValue(nextState, `${action.payload}.dirty`, false);\r\n    }\r\n\r\n    if (action.type === FormActions.SetDisabled) {\r\n      nextState = setValue(nextState, `${action.payload}.disabled`, true);\r\n    }\r\n\r\n    if (action.type === FormActions.SetEnabled) {\r\n      nextState = setValue(nextState, `${action.payload}.disabled`, false);\r\n    }\r\n\r\n    return nextState;\r\n  };\r\n}\r\n",
    "import { ChangeDetectorRef, Directive, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormGroupDirective } from '@angular/forms';\r\nimport { Store } from '@ngrx/store';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, takeUntil } from 'rxjs/operators';\r\nimport { UpdateForm, UpdateFormDirty, UpdateFormErrors, UpdateFormStatus, UpdateFormValue } from './actions';\r\n\r\nconst getValue = (obj, prop) => prop.split('.').reduce((acc, part) => acc && acc[part], obj);\r\n\r\n@Directive({ selector: '[ngrxForm]' })\r\nexport class FormDirective implements OnInit, OnDestroy {\r\n  @Input('ngrxForm')\r\n  path: string;\r\n  @Input('ngrxFormDebounce')\r\n  debounce = 100;\r\n  @Input('ngrxFormClearOnDestroy')\r\n  clearDestroy: boolean;\r\n\r\n  private _destroy$ = new Subject<null>();\r\n  private _updating = false;\r\n\r\n  constructor(\r\n    private _store: Store<any>,\r\n    private _formGroupDirective: FormGroupDirective,\r\n    private _cd: ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this._store\r\n      .select(state => getValue(state, `${this.path}.model`))\r\n      .pipe(takeUntil(this._destroy$))\r\n      .subscribe(model => {\r\n        if (!this._updating) {\r\n          this._updating = false;\r\n          if (model) {\r\n            this._formGroupDirective.form.patchValue(model);\r\n            this._cd.markForCheck();\r\n          }\r\n        }\r\n      });\r\n\r\n    this._store\r\n      .select(state => getValue(state, `${this.path}.dirty`))\r\n      .pipe(takeUntil(this._destroy$))\r\n      .subscribe(dirty => {\r\n        if (this._formGroupDirective.form.dirty !== dirty) {\r\n          if (dirty === true) {\r\n            this._formGroupDirective.form.markAsDirty();\r\n            this._cd.markForCheck();\r\n          } else if (dirty === false) {\r\n            this._formGroupDirective.form.markAsPristine();\r\n            this._cd.markForCheck();\r\n          }\r\n        }\r\n      });\r\n\r\n    this._store\r\n      .select(state => getValue(state, `${this.path}.disabled`))\r\n      .pipe(takeUntil(this._destroy$))\r\n      .subscribe(disabled => {\r\n        if (this._formGroupDirective.form.disabled !== disabled) {\r\n          if (disabled === true) {\r\n            this._formGroupDirective.form.disable();\r\n            this._cd.markForCheck();\r\n          } else if (disabled === false) {\r\n            this._formGroupDirective.form.enable();\r\n            this._cd.markForCheck();\r\n          }\r\n        }\r\n      });\r\n\r\n    this._formGroupDirective.valueChanges\r\n      .pipe(\r\n        debounceTime(this.debounce),\r\n        takeUntil(this._destroy$)\r\n      )\r\n      .subscribe(value => {\r\n        this._updating = true;\r\n        this._store.dispatch(\r\n          new UpdateFormValue({\r\n            path: this.path,\r\n            value\r\n          })\r\n        );\r\n\r\n        this._store.dispatch(\r\n          new UpdateFormDirty({\r\n            path: this.path,\r\n            dirty: this._formGroupDirective.dirty\r\n          })\r\n        );\r\n\r\n        this._store.dispatch(\r\n          new UpdateFormErrors({\r\n            path: this.path,\r\n            errors: this._formGroupDirective.errors\r\n          })\r\n        );\r\n      });\r\n\r\n    this._formGroupDirective.statusChanges\r\n      .pipe(\r\n        debounceTime(this.debounce),\r\n        takeUntil(this._destroy$)\r\n      )\r\n      .subscribe(status => {\r\n        this._store.dispatch(\r\n          new UpdateFormStatus({\r\n            path: this.path,\r\n            status\r\n          })\r\n        );\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._destroy$.next();\r\n    this._destroy$.complete();\r\n\r\n    if (this.clearDestroy) {\r\n      this._store.dispatch(\r\n        new UpdateForm({\r\n          path: this.path,\r\n          value: null,\r\n          dirty: null,\r\n          status: null,\r\n          errors: null\r\n        })\r\n      );\r\n    }\r\n  }\r\n}\r\n",
    "import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { FormDirective } from './directive';\r\n\r\n@NgModule({\r\n  imports: [ReactiveFormsModule, StoreModule],\r\n  declarations: [FormDirective],\r\n  exports: [FormDirective]\r\n})\r\nexport class NgrxFormModule {}\r\n"
  ],
  "names": [
    "UpdateStatus",
    "UpdateValue",
    "UpdateDirty",
    "SetDirty",
    "SetPrestine",
    "UpdateErrors",
    "SetDisabled",
    "SetEnabled",
    "UpdateForm",
    "UpdateFormStatus",
    "payload",
    "this",
    "type",
    "FormActions",
    "UpdateFormValue",
    "UpdateFormDirty",
    "SetFormDirty",
    "SetFormPristine",
    "UpdateFormErrors",
    "SetFormDisabled",
    "SetFormEnabled",
    "setValue",
    "obj",
    "prop",
    "val",
    "Object",
    "assign",
    "split",
    "last",
    "length",
    "reduce",
    "acc",
    "part",
    "getValue",
    "FormDirective",
    "_store",
    "_formGroupDirective",
    "_cd",
    "debounce",
    "_destroy$",
    "Subject",
    "_updating",
    "prototype",
    "ngOnInit",
    "_this",
    "select",
    "state",
    "path",
    "pipe",
    "takeUntil",
    "subscribe",
    "model",
    "form",
    "patchValue",
    "markForCheck",
    "dirty",
    "markAsDirty",
    "markAsPristine",
    "disabled",
    "disable",
    "enable",
    "valueChanges",
    "debounceTime",
    "value",
    "dispatch",
    "errors",
    "statusChanges",
    "status",
    "ngOnDestroy",
    "next",
    "complete",
    "clearDestroy",
    "Directive",
    "args",
    "selector",
    "Store",
    "FormGroupDirective",
    "ChangeDetectorRef",
    "Input",
    "NgrxFormModule",
    "NgModule",
    "imports",
    "ReactiveFormsModule",
    "StoreModule",
    "declarations",
    "exports",
    "reducer",
    "action",
    "nextState"
  ],
  "mappings": "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"
}
